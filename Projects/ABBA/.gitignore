# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws

# ABBA Specific
# Configuration files with sensitive data
config_local.yaml
config_production.yaml
.env.local
.env.production

# Database files
*.db
*.sqlite
*.sqlite3

# Log files
logs/
*.log

# Backup files
backups/
*.backup
*.bak

# Export files
exports/
*.csv
*.json
*.xlsx

# Model files
models/
*.pkl
*.joblib
*.h5
*.hdf5

# Cache files
cache/
.cache/

# Test artifacts
test_models/
validation_results/
real_data/
data_archive/
results/

# Example files (can be regenerated)
examples/

# Coverage and analysis files
.coverage
callgraph.dot
audit_report.md
inventory_report.md
REFACTOR_SUMMARY.md
htmlcov/

# Analysis and migration files
analyze_test_suite.py
test_analysis_report.json
MIGRATION_SUMMARY.md
FINAL_MIGRATION_REPORT.md
tests_audit.md
radon.txt
pylint_design.txt

# Old MLB scripts
mlb_2024_*.py
*.cache

# Temporary files
tmp/
temp/
*.tmp

# Browser automation
browser_data/
playwright-report/
test-results/

# API keys and credentials
api_keys.txt
credentials.json
secrets.json

# System files
.DS_Store
Thumbs.db
desktop.ini

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Docker
.dockerignore
Dockerfile
docker-compose.yml
docker-compose.override.yml

# Kubernetes
*.yaml
*.yml
!config.yaml

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Cloudflare
wrangler.toml
.cloudflare/

# Monitoring
grafana/
prometheus/
*.prom

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/
test_results/
junit.xml

# Documentation
docs/_build/
site/

# Archives
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Media files
*.mp4
*.mov
*.avi
*.mkv
*.mp3
*.wav
*.flac
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.svg

# Fonts
*.ttf
*.otf
*.woff
*.woff2

# Certificates
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx

# Scripts
*.sh
*.bat
*.cmd
*.ps1

# Mac specific
.AppleDouble
.LSOverride
Icon
._*

# Windows specific
*.lnk
*.exe
*.msi
*.dll
*.sys

# Linux specific
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Backup files created by editors
*~
*.swp
*.swo
*#

# Local development
local/
dev/
development/

# Production
prod/
production/
staging/

# User-specific files
user_config.yaml
personal_settings.json

# Debug files
debug.log
error.log
crash.log

# Performance profiling
*.prof
*.profile
*.trace

# Memory dumps
*.dmp
*.hprof

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pdm
.pdm.toml
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath
*.sage.py

# Spyder
.spyderproject
.spyproject

# Rope
.ropeproject

# mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre
.pyre/

# pytype
.pytype/

# Cython
cython_debug/

# PyCharm
.idea/
*.iml
*.ipr
*.iws 